import random

# Initialize the game board
board = ["-", "-", "-",
         "-", "-", "-",
         "-", "-", "-"]

# Initialize the current player and winner
currentPlayer = "X"
winner = None
gameRunning = True

# Function to print the game board
def printBoard(board):
    print(board[0] + " | " + board[1] + " | " + board[2])
    print("---------")
    print(board[3] + " | " + board[4] + " | " + board[5])
    print("---------")
    print(board[6] + " | " + board[7] + " | " + board[8])

# Function to take player input
def playerInput(board):
    inp = int(input("Enter a number 1-9: "))
    if inp >= 1 and inp <= 9 and board[inp-1] == "-":
        board[inp-1] = currentPlayer
    else:
        print("Oops someone already went in that position!")
        playerInput(board)

# Function to check for win or tie
def checkHorizontal(board):
    global winner
    if board[0] == board [1] == board [2] and board[1] != "-":
        winner = board[0]
        return True
    elif board[3] == board [4] == board [5] and board[3] != "-":
        winner = board[3]
        return True
    elif board[6] == board [7] == board [8] and board[6] != "-":
        winner = board[6]
        return True

def checkRow(board):
    global winner
    if board[0] == board[3] == board[6] and board[0] != "-":
        winner = board[0]
        return True
    elif board[1] == board[4] == board[7] and board[1] != "-":
        winner = board[1]
        return True
    elif board[2] == board[5] == board[8] and board[2] != "-":
        winner = board[2]
        return True

def checkDiag(board):
    global winner
    if board[0] == board[4] == board[8] and board[0] != "-":
        winner = board[0]
        return True
    elif board[2] == board[4] == board[6] and board[2] != "-":
        winner = board[2]
        return True

def checkTie(board):
    global gameRunning
    if "-" not in board:
        printBoard(board)
        print("It is a tie!")
        gameRunning = False

def checkWin():
    global gameRunning
    if checkDiag(board) or checkHorizontal(board) or checkRow(board):
        printBoard(board)
        print(f"The winner is {winner}")
        gameRunning = False

# Function to switch the player
def switchPlayer():
    global currentPlayer
    if currentPlayer == "X":
        currentPlayer = "O"
    else:
        currentPlayer = "X"

# Function to make the computer move
def computer(board):
    global currentPlayer
    bestScore = float('-inf')
    bestMove = 0
    for i in range(len(board)):
        if board[i] == "-":
            board[i] = "O"
            score = minimax(board, 0, False)
            board[i] = "-"
            if score > bestScore:
                bestScore = score
                bestMove = i
    board[bestMove] = "O"
    switchPlayer()

# Function to calculate the score using minimax algorithm
def minimax(board, depth, isMaximizing):
    if checkDiag(board) or checkHorizontal(board) or checkRow(board):
        if winner == "O":
            return 10
        elif winner == "X":
            return -10
    elif "-" not in board:
        return 0

    if isMaximizing:
        bestScore = float('-inf')
        for i in range(len(board)):
            if board[i] == "-":
                board[i] = "O"
                score = minimax(board, depth + 1, False)
                board[i] = "-"
                bestScore = max(score, bestScore)
        return bestScore
    else:
        bestScore = float('inf')
        for i in range(len(board)):
            if board[i] == "-":
                board[i] = "X"
                score = minimax(board, depth + 1, True)
                board[i] = "-"
                bestScore = min(score, bestScore)
        return bestScore

# Main game loop
while gameRunning:
    printBoard(board)
    playerInput(board)
    checkWin()
    checkTie(board)
    switchPlayer()
    computer(board)
    checkWin()
    checkTie(board)
